import { env } from 'node:process';
import { Client } from 'tumblr.js';
import { assert } from 'chai';
import { test } from 'mocha';

if (
  !env.TUMBLR_OAUTH_CONSUMER_KEY ||
  !env.TUMBLR_OAUTH_CONSUMER_SECRET ||
  !env.TUMBLR_OAUTH_TOKEN ||
  !env.TUMBLR_OAUTH_TOKEN_SECRET
) {
  throw new Error('Must provide all Oauth1 environment variables');
}

describe('oauth1 write requests', () => {
  /** @type {Client} */
  let client;
  before(function () {
    if (!env.CI) {
      console.warn(
        'This test suite uses the API to make changes. Modify the test suite to enabled it.',
      );
      this.skip();
    }

    client = new Client({
      consumer_key: env.TUMBLR_OAUTH_CONSUMER_KEY,
      consumer_secret: env.TUMBLR_OAUTH_CONSUMER_SECRET,
      token: env.TUMBLR_OAUTH_TOKEN,
      token_secret: env.TUMBLR_OAUTH_TOKEN_SECRET,
    });
    client.returnPromises();
  });

  test('creates a post', async () => {
    const userResp = await client.userInfo();

    assert.isOk(userResp);
    const blogName = userResp.user.blogs[0].name;

    assert.isOk(
      await client.createPost(blogName, {
        type: 'text',
        format: 'markdown',
        title: `Automated test post ${new Date().toISOString()}`,
        body: 'This post was automatically generated by the tumblr.js tests.\n\n[The official JavaScript client library for the Tumblr API.](https://github.com/tumblr/tumblr.js)',
        tags: `tumblr.js-test,tumblr.js-version-${client.version}`,
      }),
    );
  });
});
